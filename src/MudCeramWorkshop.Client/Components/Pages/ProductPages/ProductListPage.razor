@page "/"
@page "/products"
@using Microsoft.Extensions.Localization
@using System.Globalization
@using MudCeramWorkshop.Client.Components.Dialogs
@using MudCeramWorkshop.Client.Components.Pages.ProductPages.Resources
@using MudCeramWorkshop.Data.Domain.InterfacesRepository
@using MudCeramWorkshop.Data.Domain.Models.MainDomain

@inherits MudCeramWorkshop.Client.Utils.ComponentBase.CustomComponentBase

<MudText Typo="Typo.h6">ProductList</MudText>



<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        @foreach (Product product in products)
        {
            <MudItem xs="4" sm="4" md="3">
                <MudCard Elevation="2" Style="height:100%">
                    <MudCardMedia Image="https://fotorama.io/fit/frog.png" Height="200" loading="lazy" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6" GutterBottom="false">@product.Name</MudText>
                        <MudText Typo="Typo.overline" GutterBottom="false">#@product.Reference</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="@($"product/{@product.Id}")" Size="Size.Small">@Localizer["hi"]</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
    [Inject] IStringLocalizer<ProductTranslation> Localizer { get; set; } = default!;
    [Inject] IProductRepository productRepository { get; set; } = default!;

    private ICollection<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await productRepository.GetAll();
    }

    private Task NewProduct()
    {

        var options = new DialogOptions { CloseOnEscapeKey = true };

        return Dialog.ShowAsync<TestDialog>("Custom Options Dialog", options);
    }
}
